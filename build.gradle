buildscript {
	ext {
		set('springCloudVersion', "2021.0.2")
		set('springBootVersion', "2.6.7")
		set('gradleDockerVersion', "1.2")
		set('sonarqubeVersion', "3.3")

		powermockVersion = '2.0.2'
		set('log4j2.version', '2.17.0')
		set('logback.version', '1.2.9')
	}
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
		classpath("se.transmode.gradle:gradle-docker:$gradleDockerVersion")
		classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:$sonarqubeVersion")
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'

	id 'jacoco'
}

apply plugin: 'org.sonarqube'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'docker'


repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'junit:junit:4.13.1'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.apache.commons:commons-lang3:3.12.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

group = 'br.com.gmtbtec'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/release" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencyManagement {
	applyMavenExclusions = false
	imports {
		mavenBom("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

